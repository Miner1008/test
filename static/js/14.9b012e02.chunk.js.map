{"version":3,"sources":["components/Input/Input.tsx","hooks/useBlock.ts","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","utils/getTimePeriods.ts","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","useBlock","useContext","BlockContext","Title","Heading","attrs","as","size","secondary","Blurb","Text","StyledHero","Hero","TranslateString","useI18n","Container","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledIfoCardDescription","Divider","borderColor","ToggleButton","button","isOpen","IfoCardDescription","defaultIsOpen","description","useState","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","saleAmount","token","currency","projectSiteUrl","maxContribution","minContribution","href","style","margin","ButtonWrapper","LabelButton","label","buttonLabel","disabled","fontSize","color","bold","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","console","log","marginRight","toLocaleString","ContributeModal","contract","onDismiss","setValue","pendingTx","setPendingTx","account","useWallet","web3","useWeb3","balance","setBalance","fastRefresh","useRefresh","useEffect","getWeb3","a","eth","getBalance","res","fetchBalance","useBNBBalance","title","e","currentTarget","getFullDisplayBalance","BigNumber","pow","toString","justifyContent","fullWidth","variant","mr","sendTransaction","from","to","_address","times","IfoCardContribute","currencyAddress","status","raisingAmount","softCapReached","finalized","contributions","setContributions","claimedTokens","setClaimedTokens","refundedTokens","setRefundedTokens","tokensPerBnb","setTokensPerBnb","useModal","onPresentContributeModal","methods","call","refunds","fetch","claim","claimTokens","send","refund","claimRefund","isFinished","percentOfUserContribution","userClaimed","isGreaterThan","userRefunded","claimableTokens","getBalanceNumber","toFixed","StyledProgress","IfoCardProgress","progress","primaryStep","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Details","Countdown","IfoCardTime","isLoading","secondsUntilStart","secondsUntilEnd","countdownToUse","timeUntil","suffix","StyledIfoCard","Card","ActionWrapper","StyledLinearProgress","withStyles","barColorPrimary","backgroundColor","bar2Buffer","dashedColorPrimary","backgroundImage","root","borderRadius","padding","LinearProgress","getStatus","currentTime","startTime","endTime","IfoCard","ifo","id","tokenDecimals","blocksRemaining","endBlockNum","hardCap","hardCapProgress","softCap","softCapProgress","startBlockNum","weiRaised","state","setState","presaleContract","useIdoContract","address","process","currentBlock","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","round","Date","now","fetchProgress","isActive","ribbon","valueBuffer","UnlockButton","totalAmount","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","filter","ActiveIfo","IfoCards","map","responsive","Ifos","path","useRouteMatch","exact","CurrentIfo"],"mappings":"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","file":"static/js/14.9b012e02.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(999, 'Creating Reality One Project At A Time')}</Title>\n        <Blurb>{TranslateString(999, 'Make your CashSwap & CashBlock')}</Blurb>\n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n  margin-top: 48px;\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: left;\n  margin-left: 10px;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: left;\n  margin-left: 10px;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => (\n  <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n    <img src={`/images/ifos/${ifoId}.png`} alt={ifoId} width=\"64px\" height=\"64px\" />\n    <div>\n      <Name>{name}</Name>\n      <Description>{subTitle}</Description>\n    </div>\n  </StyledIfoCardHeader>\n)\n\nexport default IfoCardHeader\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  saleAmount: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n  token: string\n  currency: string\n  maxContribution: string\n  minContribution: string\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  saleAmount,\n  token,\n  currency,\n  projectSiteUrl,\n  maxContribution,\n  minContribution,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>\n            {saleAmount} {token}\n          </Text>\n        </Item>\n        <Item>\n          <Display>Max contribution</Display>\n          <Text>\n            {maxContribution} {currency}\n          </Text>\n        </Item>\n        <Item>\n          <Display>Min contribution</Display>\n          <Text>\n            {minContribution} {currency}\n          </Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: 0px;\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n  console.log('alex: balacne input ', symbol);\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n            <img alt=\"BNB logo\" src=\"/images/cash/BNB.png\" width=\"24px\" style={{ marginRight: '8px' }} />\n            </div>\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(999, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useRefresh from 'hooks/useRefresh'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getWeb3 } from 'utils/web3'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress?: string\n  onDismiss?: () => void\n}\n\nconst useBNBBalance = () => {\n  const [balance, setBalance] = useState('0')\n  const { account }: { account: string } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const fetchBalance = async () => {\n      const res = await web3.eth.getBalance(account)\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, fastRefresh])\n\n  return balance\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const web3 = useWeb3()\n\n  const balance = useBNBBalance()\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={getFullDisplayBalance(new BigNumber(balance))}\n        onSelectMax={() => setValue(new BigNumber(balance).div(new BigNumber(10).pow(18)).toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await web3.eth.sendTransaction({\n              from: account,\n              to: contract._address,\n              value: new BigNumber(value).times(new BigNumber(10).pow(18)).toString(),\n            })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  softCapReached: boolean\n  finalized: boolean\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  softCapReached,\n  finalized,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [contributions, setContributions] = useState(new BigNumber(0))\n  const [claimedTokens, setClaimedTokens] = useState(new BigNumber(0))\n  const [refundedTokens, setRefundedTokens] = useState(new BigNumber(0))\n  const [tokensPerBnb, setTokensPerBnb] = useState(new BigNumber(0))\n\n  const { account } = useWallet()\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      setContributions(new BigNumber(await contract.methods.contributions(account).call()))\n      setClaimedTokens(new BigNumber(await contract.methods.claimedTokens(account).call()))\n      setRefundedTokens(new BigNumber(await contract.methods.refunds(account).call()))\n      setTokensPerBnb(new BigNumber(await contract.methods.tokensPerBnb().call()))\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.claimTokens().send({ from: account })\n    setPendingTx(false)\n  }\n\n  const refund = async () => {\n    setPendingTx(true)\n    await contract.methods.claimRefund().send({ from: account })\n    setPendingTx(false)\n  }\n\n  const isFinished = status === 'finished' || finalized\n  const percentOfUserContribution = new BigNumber(contributions).div(raisingAmount).times(100)\n\n  const userClaimed = isFinished && claimedTokens.isGreaterThan(new BigNumber(0))\n  const userRefunded = isFinished && refundedTokens.isGreaterThan(new BigNumber(0))\n\n  const claimableTokens = getBalanceNumber(contributions) * getBalanceNumber(tokensPerBnb)\n\n  const getButtonLabel = () => {\n    if (!isFinished) return 'Contribute'\n\n    if (softCapReached) return 'Claim'\n\n    return 'Refund'\n  }\n\n  const getLabel = () => {\n    if (!isFinished) return `Your contribution (${currency})`\n\n    if (softCapReached) return 'Your tokens to claim'\n\n    return 'Your tokens to refund'\n  }\n\n  const getButtonValue = () => {\n    if (!isFinished) {\n      return getBalanceNumber(contributions, 18).toFixed(4)\n    }\n\n    if (softCapReached) {\n      return userClaimed ? 'Claimed' : claimableTokens.toFixed(4)\n    }\n\n    return userRefunded ? 'Refunded' : claimableTokens.toFixed(4)\n  }\n\n  const getButtonHint = () => {\n    if (!isFinished) return `${percentOfUserContribution.toFixed(5)}% of total`\n\n    if (softCapReached) return `You'll be refunded any excess tokens when you claim`\n\n    return `You'll be refunded all your contributions`\n  }\n\n  const handleOnClick = () => {\n    if (!isFinished) return onPresentContributeModal\n\n    if (softCapReached) return claim\n\n    return refund\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userClaimed || userRefunded}\n        buttonLabel={getButtonLabel()}\n        label={getLabel()}\n        value={getButtonValue()}\n        onClick={handleOnClick()}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {getButtonHint()}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => (\n  <StyledProgress>\n    <Progress primaryStep={progress} />\n  </StyledProgress>\n)\n\nexport default IfoCardProgress\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  finalized: boolean\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({\n  isLoading,\n  status,\n  secondsUntilStart,\n  secondsUntilEnd,\n  finalized,\n}) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon, Flex, Text, Button  } from '@pancakeswap-libs/uikit'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport { useIdoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useBlock from 'hooks/useBlock'\nimport { withStyles } from '@material-ui/core'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardContribute from './IfoCardContribute'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardTime from './IfoCardTime'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst ActionWrapper = styled.div`\n  margin-top: 12px;\n`\n\nconst StyledLinearProgress = withStyles({\n  barColorPrimary: {\n    backgroundColor: '#5f696e',\n  },\n  bar2Buffer: {\n    backgroundColor: '#b0bec5',\n  },\n  dashedColorPrimary: {\n    backgroundImage: `radial-gradient(#b0bec5 0%, #6D30A0 26%, transparent 42%);`,\n  },\n  root: {\n    borderRadius: 5,\n    height: 14,\n    padding: '0 20px',\n  },\n})(LinearProgress)\n\nconst getStatus = (currentTime: number, startTime: number, endTime: number): IfoStatus | null => {\n  if (currentTime < startTime) {\n    return 'coming_soon'\n  }\n\n  if (currentTime >= startTime && currentTime <= endTime) {\n    return 'live'\n  }\n\n  if (currentTime > endTime) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    name,\n    subTitle,\n    description,\n    saleAmount,\n    projectSiteUrl,\n    currencyAddress,\n    tokenDecimals,\n    currency,\n    maxContribution,\n    minContribution,\n    token,\n  } = ifo\n\n  const [state, setState] = useState({\n    blocksRemaining: 0,\n    endBlockNum: 0,\n    hardCap: new BigNumber(0),\n    hardCapProgress: 0,\n    isLoading: true,\n    isOpen: null,\n    progress: 0,\n    secondsUntilEnd: 0,\n    secondsUntilStart: 0,\n    softCap: new BigNumber(0),\n    softCapProgress: 0,\n    startBlockNum: 0,\n    status: null,\n    tokensPerBnb: new BigNumber(0),\n    weiRaised: new BigNumber(0),\n    softCapReached: false,\n    finalized: false,\n  })\n  const { account } = useWallet()\n  const presaleContract = useIdoContract(ifo.address[CHAIN_ID])\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [\n        startTime,\n        endTime,\n        softCap,\n        hardCap,\n        tokensPerBnb,\n        weiRaised,\n        isOpen,\n        softCapReached,\n        finalized,\n      ] = await Promise.all([\n        presaleContract.methods.startTime().call(),\n        presaleContract.methods.endTime().call(),\n        presaleContract.methods.softCap().call(),\n        presaleContract.methods.hardCap().call(),\n        presaleContract.methods.tokensPerBnb().call(),\n        presaleContract.methods.weiRaised().call(),\n        presaleContract.methods.isOpen().call(),\n        presaleContract.methods.softCapReached().call(),\n        presaleContract.methods.finalized().call(),\n      ])\n\n      const softCapProgress = (weiRaised / softCap) * 100\n      const hardCapProgress = (weiRaised / hardCap) * 100\n\n      const startBlockNum = parseInt(startTime, 10)\n      const endBlockNum = parseInt(endTime, 10)\n      const blocksRemaining = endBlockNum - currentBlock\n\n      const currentTime = Math.round(Date.now() / 1000)\n\n      // const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const status = getStatus(currentTime, startTime, endTime)\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentTime > startTime\n          ? ((currentTime - startTime) / (endTime - startTime)) * 100\n          : ((currentTime - endTime) / (startTime - endTime)) * 100\n\n      setState({\n        blocksRemaining,\n        endBlockNum,\n        hardCap,\n        hardCapProgress: hardCapProgress > 100 ? 100 : hardCapProgress,\n        isLoading: false,\n        isOpen,\n        progress,\n        secondsUntilEnd: endTime - currentTime,\n        secondsUntilStart: startTime - currentTime,\n        softCap,\n        softCapProgress: softCapProgress > 100 ? 100 : softCapProgress,\n        startBlockNum,\n        status,\n        tokensPerBnb,\n        weiRaised,\n        softCapReached,\n        finalized,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, presaleContract, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished' || state.finalized\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          finalized\n        />\n        {(isActive || isFinished) && (\n          <>\n            <Flex justifyContent=\"space-between\">\n              <Text style={{ fontSize: '16px' }}>Price:</Text>\n              <Text bold style={{ fontSize: '16px' }}>\n                1 BNB = {`${new BigNumber(state.tokensPerBnb).div(10 ** tokenDecimals)}`} {ifo.token}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text style={{ fontSize: '16px' }}>BNB raised:</Text>\n              <Text bold style={{ fontSize: '16px' }}>\n                {getFullDisplayBalance(new BigNumber(state.weiRaised))} BNB\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text style={{ fontSize: '16px' }}>Soft Cap ({getBalanceNumber(state.softCap)} BNB):</Text>\n              <Text bold style={{ fontSize: '16px' }}>\n                {`${state.softCapProgress.toFixed(2)}%`}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text style={{ fontSize: '16px' }}>Hard Cap ({getBalanceNumber(state.hardCap)} BNB):</Text>\n              <Text bold style={{ fontSize: '16px' }}>\n                {`${state.hardCapProgress.toFixed(2)}%`}\n              </Text>\n            </Flex>\n          </>\n        )}\n        <ActionWrapper>\n          {(isActive || !isFinished) && (\n            <StyledProgress>\n              <StyledLinearProgress\n                variant=\"buffer\"\n                value={state.hardCapProgress}\n                valueBuffer={state.softCapProgress}\n              />\n            </StyledProgress>\n          )}\n          {!account && <UnlockButton fullWidth />}\n          {(isActive || isFinished) && account && (\n            <IfoCardContribute\n              address={ifo.address[CHAIN_ID]}\n              currency=\"BNB\"\n              currencyAddress={currencyAddress}\n              contract={presaleContract}\n              status={state.status}\n              finalized={state.finalized}\n              raisingAmount={state.hardCap}\n              softCapReached={state.softCapReached}\n            />\n          )}\n        </ActionWrapper>\n        <IfoCardDescription description={description} defaultIsOpen={false} />\n        <IfoCardDetails\n          saleAmount={saleAmount}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.hardCap}\n          totalAmount={new BigNumber(state.weiRaised)}\n          maxContribution={maxContribution}\n          minContribution={minContribution}\n          currency={currency}\n          token={token}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst StyledHeader = styled(Heading)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo: Ifo[] = ifosConfig.filter((ifo) => ifo.isActive)\n\nconst ActiveIfo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards>\n        {activeIfo.map((ifo) => (\n          <IfoCard key={ifo.id} ifo={ifo} />\n        ))}\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(999, 'Before Pre-Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(999, 'Buy BNB')}</li>\n            <li>{TranslateString(999, 'Wait for the pre-sale to start')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(999, 'During Pre-Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(999, 'While the sale is live, press the Buy button and input the amount of BNB')}</li>\n            <li>{TranslateString(999, 'Confirm the transaction in your wallet')}</li>\n            <li>{TranslateString(999, 'Min amount 0.2 BNB')}</li>\n            <li>{TranslateString(999, 'Max Amount 10 BNB')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(999, 'After Pre-Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(999, 'Tokens will distribute to your wallet after the pre-sale')}</li>\n            {/* <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li> */}\n          </List>\n          {/* <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n          </Text> */}\n        </div>\n        <div>\n          <Image src=\"/images/cash/rocket.png\" alt=\"pre-sale rocket\" width={400} height={350} responsive />\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default ActiveIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}