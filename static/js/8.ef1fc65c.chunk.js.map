{"version":3,"sources":["utils/callHelpers.ts","components/Input/Input.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","components/TokenInput/TokenInput.tsx","hooks/useStake.ts","hooks/useBlock.ts","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","StyledInputWrapper","styled","div","props","theme","colors","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledSpacer","size","Spacer","s","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useHarvest","farmPid","dispatch","useDispatch","useWallet","useMasterchef","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","sousId","isUsingBnb","useSousChef","handleHarvest","updateUserPendingReward","updateUserBalance","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","useBlock","BlockContext","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useApprove","onApprove","useSousApprove","updateUserAllowance","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","useUnstake","StyledLabel","isFinished","Label","text","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","decimals","unit","previousValue","useRef","useEffect","current","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","CardTitle","Card","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","role","aria-label","getBalanceNumber","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","Hero","Farm","path","farms","useFarms","pools","usePools","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","mb","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/8.ef1fc65c.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {\n        depositFeeBP > 0 ?\n          <StyledMaxText>\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\n          </StyledMaxText>\n          :\n          null\n      }\n\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if(amount === '')\n      {\n        const value = 0\n        const txHash = await stake(masterChefContract, pid, value.toString(), account)\n        dispatch(fetchFarmUserDataAsync(account))\n        console.info(txHash)\n      } else {\n        const txHash = await stake(masterChefContract, pid, amount, account)\n        dispatch(fetchFarmUserDataAsync(account))\n        console.info(txHash)\n      }\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(0.235)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  \n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    \n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    // if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n    //   return tokenPriceBN.div(bnbPriceUSD)\n    // }\n\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'SOUP Pool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake MOMO to earn new tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}